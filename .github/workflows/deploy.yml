name: 🚀 Simple Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Step 1: Checkout the repo
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Setup Terraform
      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      # Step 3: Terraform Init
      - name: 🔧 Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=my-new-terraform-bucket" \
            -backend-config="region=eu-west-2" \
            -backend-config="key=monitor-project/terraform.tfstate"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      # Step 4: Terraform Plan
      - name: 📋 Terraform Plan
        run: |
          cd terraform
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      # Step 5: Terraform Apply
      - name: ✅ Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      # Step 6: Get EC2 public IP
      - name: 📝 Get IP Address
        id: get-ip
        run: |
          cd terraform
          sleep 15
           # Clean method: Get IP and remove any debug output
          IP=$(terraform output -raw public_ip 2>&1 | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          
          
          # Method 2: If that fails, extract from state file
          if [ -z "$IP" ]; then
            echo "Terraform output failed, extracting from state file..."
            IP=$(grep -o '"public_ip": "[^"]*' terraform.tfstate | cut -d'"' -f4 | head -1)
          fi
          
          # Final check
          if [ -z "$IP" ]; then
            echo "❌ ERROR: Could not retrieve IP address"
            exit 1
          fi
          
          echo "IP_ADDRESS=$IP" >> $GITHUB_ENV
          echo "✅ Server IP: $IP"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      # Step 7: Deploy with Ansible
      - name: 🚀 Deploy with Ansible
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/monitor.pem
          chmod 600 ~/.ssh/monitor.pem

          # Add the server to known_hosts
          ssh-keyscan -H $IP_ADDRESS >> ~/.ssh/known_hosts 2>/dev/null || true
          sleep 10

          # Run Ansible to install Docker and deploy app
          ansible-playbook -i "$IP_ADDRESS," ansible/playbook.yml --private-key=~/.ssh/monitor.pem -u ubuntu

          echo "🎉 Deployment complete!"
          echo "🌐 WordPress available at: http://$IP_ADDRESS"
          echo "📊 Grafana available at: http://$IP_ADDRESS/grafana"